{
  "resolvedId": "D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolders.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\n */\nvar WorkspaceFoldersRequest;\n(function (WorkspaceFoldersRequest) {\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0('workspace/workspaceFolders');\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\n/**\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\n * folder configuration changes.\n */\nvar DidChangeWorkspaceFoldersNotification;\n(function (DidChangeWorkspaceFoldersNotification) {\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWorkspaceFolders');\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\n//# sourceMappingURL=protocol.workspaceFolders.js.map",
      "start": 1707126048823,
      "end": 1707126049088,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707126049088,
      "end": 1707126049088,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707126049088,
      "end": 1707126049088,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1707126049088,
      "end": 1707126049088,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707126049088,
      "end": 1707126049088,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707126049088,
      "end": 1707126049088,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707126049088,
      "end": 1707126049088,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707126049088,
      "end": 1707126049088,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707126049089,
      "end": 1707126049089,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as protocol_workspaceFolders } from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolders.js?commonjs-exports\";\nimport require$$0 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/messages.js?commonjs-proxy\";\n\n(function (exports) {\n\t\"use strict\";\n\t/* --------------------------------------------------------------------------------------------\n\t * Copyright (c) Microsoft Corporation. All rights reserved.\n\t * Licensed under the MIT License. See License.txt in the project root for license information.\n\t * ------------------------------------------------------------------------------------------ */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = void 0;\n\tconst messages_1 = require$$0;\n\t/**\n\t * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\n\t */\n\tvar WorkspaceFoldersRequest;\n\t(function (WorkspaceFoldersRequest) {\n\t    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0('workspace/workspaceFolders');\n\t})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\n\t/**\n\t * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\n\t * folder configuration changes.\n\t */\n\tvar DidChangeWorkspaceFoldersNotification;\n\t(function (DidChangeWorkspaceFoldersNotification) {\n\t    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWorkspaceFolders');\n\t})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\n\t//# sourceMappingURL=protocol.workspaceFolders.js.map \n} (protocol_workspaceFolders));\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(protocol_workspaceFolders);\nexport { protocol_workspaceFolders as __moduleExports };",
      "start": 1707126049089,
      "end": 1707126049741,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;CAAA,YAAY,CAAC;CACb;CACA;CACA;CACA;CACA,MAAM,CAAC,cAAc,UAAU,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;CAC9D,gDAAgD,kCAAkC,KAAK,CAAC,CAAC;CACzF,MAAM,UAAU,GAAG,UAAqB,CAAC;CACzC;CACA;CACA;CACA,IAAI,uBAAuB,CAAC;CAC5B,CAAC,UAAU,uBAAuB,EAAE;CACpC,IAAI,uBAAuB,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,oBAAoB,CAAC,4BAA4B,CAAC,CAAC;CACrG,CAAC,EAAE,uBAAuB,GAAG,OAAO,CAAC,uBAAuB,KAAK,kCAAkC,EAAE,CAAC,CAAC,CAAC;CACxG;CACA;CACA;CACA;CACA,IAAI,qCAAqC,CAAC;CAC1C,CAAC,UAAU,qCAAqC,EAAE;CAClD,IAAI,qCAAqC,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,wBAAwB,CAAC,qCAAqC,CAAC,CAAC;CAChI,CAAC,EAAE,qCAAqC,GAAG,OAAO,CAAC,qCAAqC,KAAK,gDAAgD,EAAE,CAAC,CAAC,CAAC;CAClJ"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707126049741,
      "end": 1707126049741,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707126049741,
      "end": 1707126049741,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707126049741,
      "end": 1707126049741,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1707126049741,
      "end": 1707126049741,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1707126049741,
      "end": 1707126049742,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1707126049742,
      "end": 1707126049742,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707126049742,
      "end": 1707126049742,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707126049742,
      "end": 1707126049742,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707126049742,
      "end": 1707126049742,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707126049742,
      "end": 1707126049743,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707126049743,
      "end": 1707126049743,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707126049743,
      "end": 1707126049743,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707126049743,
      "end": 1707126049743,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707126049743,
      "end": 1707126049743,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707126049743,
      "end": 1707126049743,
      "order": "normal"
    }
  ]
}
