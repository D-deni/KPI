{
  "resolvedId": "D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeError = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.DocumentFilter = void 0;\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.SemanticTokens = exports.SemanticTokenModifiers = exports.SemanticTokenTypes = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = void 0;\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\nObject.defineProperty(exports, \"ImplementationRequest\", { enumerable: true, get: function () { return protocol_implementation_1.ImplementationRequest; } });\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\nObject.defineProperty(exports, \"TypeDefinitionRequest\", { enumerable: true, get: function () { return protocol_typeDefinition_1.TypeDefinitionRequest; } });\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\nObject.defineProperty(exports, \"WorkspaceFoldersRequest\", { enumerable: true, get: function () { return protocol_workspaceFolders_1.WorkspaceFoldersRequest; } });\nObject.defineProperty(exports, \"DidChangeWorkspaceFoldersNotification\", { enumerable: true, get: function () { return protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification; } });\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\nObject.defineProperty(exports, \"ConfigurationRequest\", { enumerable: true, get: function () { return protocol_configuration_1.ConfigurationRequest; } });\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\nObject.defineProperty(exports, \"DocumentColorRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.DocumentColorRequest; } });\nObject.defineProperty(exports, \"ColorPresentationRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.ColorPresentationRequest; } });\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\nObject.defineProperty(exports, \"FoldingRangeRequest\", { enumerable: true, get: function () { return protocol_foldingRange_1.FoldingRangeRequest; } });\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\nObject.defineProperty(exports, \"DeclarationRequest\", { enumerable: true, get: function () { return protocol_declaration_1.DeclarationRequest; } });\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\nObject.defineProperty(exports, \"SelectionRangeRequest\", { enumerable: true, get: function () { return protocol_selectionRange_1.SelectionRangeRequest; } });\nconst protocol_progress_1 = require(\"./protocol.progress\");\nObject.defineProperty(exports, \"WorkDoneProgress\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgress; } });\nObject.defineProperty(exports, \"WorkDoneProgressCreateRequest\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCreateRequest; } });\nObject.defineProperty(exports, \"WorkDoneProgressCancelNotification\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCancelNotification; } });\nconst protocol_callHierarchy_1 = require(\"./protocol.callHierarchy\");\nObject.defineProperty(exports, \"CallHierarchyIncomingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyIncomingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyOutgoingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyOutgoingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyPrepareRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyPrepareRequest; } });\nconst protocol_semanticTokens_1 = require(\"./protocol.semanticTokens\");\nObject.defineProperty(exports, \"SemanticTokenTypes\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokenTypes; } });\nObject.defineProperty(exports, \"SemanticTokenModifiers\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokenModifiers; } });\nObject.defineProperty(exports, \"SemanticTokens\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokens; } });\nObject.defineProperty(exports, \"TokenFormat\", { enumerable: true, get: function () { return protocol_semanticTokens_1.TokenFormat; } });\nObject.defineProperty(exports, \"SemanticTokensRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRequest; } });\nObject.defineProperty(exports, \"SemanticTokensDeltaRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensDeltaRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRangeRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRangeRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRefreshRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRefreshRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRegistrationType\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRegistrationType; } });\nconst protocol_showDocument_1 = require(\"./protocol.showDocument\");\nObject.defineProperty(exports, \"ShowDocumentRequest\", { enumerable: true, get: function () { return protocol_showDocument_1.ShowDocumentRequest; } });\nconst protocol_linkedEditingRange_1 = require(\"./protocol.linkedEditingRange\");\nObject.defineProperty(exports, \"LinkedEditingRangeRequest\", { enumerable: true, get: function () { return protocol_linkedEditingRange_1.LinkedEditingRangeRequest; } });\nconst protocol_fileOperations_1 = require(\"./protocol.fileOperations\");\nObject.defineProperty(exports, \"FileOperationPatternKind\", { enumerable: true, get: function () { return protocol_fileOperations_1.FileOperationPatternKind; } });\nObject.defineProperty(exports, \"DidCreateFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidCreateFilesNotification; } });\nObject.defineProperty(exports, \"WillCreateFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillCreateFilesRequest; } });\nObject.defineProperty(exports, \"DidRenameFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidRenameFilesNotification; } });\nObject.defineProperty(exports, \"WillRenameFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillRenameFilesRequest; } });\nObject.defineProperty(exports, \"DidDeleteFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidDeleteFilesNotification; } });\nObject.defineProperty(exports, \"WillDeleteFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillDeleteFilesRequest; } });\nconst protocol_moniker_1 = require(\"./protocol.moniker\");\nObject.defineProperty(exports, \"UniquenessLevel\", { enumerable: true, get: function () { return protocol_moniker_1.UniquenessLevel; } });\nObject.defineProperty(exports, \"MonikerKind\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerKind; } });\nObject.defineProperty(exports, \"MonikerRequest\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerRequest; } });\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * The DocumentFilter namespace provides helper functions to work with\n * [DocumentFilter](#DocumentFilter) literals.\n */\nvar DocumentFilter;\n(function (DocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\n    }\n    DocumentFilter.is = is;\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\n/**\n * The DocumentSelector namespace provides helper functions to work with\n * [DocumentSelector](#DocumentSelector)s.\n */\nvar DocumentSelector;\n(function (DocumentSelector) {\n    function is(value) {\n        if (!Array.isArray(value)) {\n            return false;\n        }\n        for (let elem of value) {\n            if (!Is.string(elem) && !DocumentFilter.is(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    DocumentSelector.is = is;\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\n/**\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\n * handler on the client side.\n */\nvar RegistrationRequest;\n(function (RegistrationRequest) {\n    RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\n/**\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\n * handler on the client side.\n */\nvar UnregistrationRequest;\n(function (UnregistrationRequest) {\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\nvar ResourceOperationKind;\n(function (ResourceOperationKind) {\n    /**\n     * Supports creating new files and folders.\n     */\n    ResourceOperationKind.Create = 'create';\n    /**\n     * Supports renaming existing files and folders.\n     */\n    ResourceOperationKind.Rename = 'rename';\n    /**\n     * Supports deleting existing files and folders.\n     */\n    ResourceOperationKind.Delete = 'delete';\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\nvar FailureHandlingKind;\n(function (FailureHandlingKind) {\n    /**\n     * Applying the workspace change is simply aborted if one of the changes provided\n     * fails. All operations executed before the failing operation stay executed.\n     */\n    FailureHandlingKind.Abort = 'abort';\n    /**\n     * All operations are executed transactional. That means they either all\n     * succeed or no changes at all are applied to the workspace.\n     */\n    FailureHandlingKind.Transactional = 'transactional';\n    /**\n     * If the workspace edit contains only textual file changes they are executed transactional.\n     * If resource changes (create, rename or delete file) are part of the change the failure\n     * handling strategy is abort.\n     */\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\n    /**\n     * The client tries to undo the operations already executed. But there is no\n     * guarantee that this is succeeding.\n     */\n    FailureHandlingKind.Undo = 'undo';\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\n/**\n * The StaticRegistrationOptions namespace provides helper functions to work with\n * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\n */\nvar StaticRegistrationOptions;\n(function (StaticRegistrationOptions) {\n    function hasId(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\n    }\n    StaticRegistrationOptions.hasId = hasId;\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\n/**\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\n * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\n */\nvar TextDocumentRegistrationOptions;\n(function (TextDocumentRegistrationOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\n    }\n    TextDocumentRegistrationOptions.is = is;\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\n/**\n * The WorkDoneProgressOptions namespace provides helper functions to work with\n * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\n */\nvar WorkDoneProgressOptions;\n(function (WorkDoneProgressOptions) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\n    }\n    WorkDoneProgressOptions.is = is;\n    function hasWorkDoneProgress(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.workDoneProgress);\n    }\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\n/**\n * The initialize request is sent from the client to the server.\n * It is sent once as the request after starting up the server.\n * The requests parameter is of type [InitializeParams](#InitializeParams)\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\n * resolves to such.\n */\nvar InitializeRequest;\n(function (InitializeRequest) {\n    InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\n/**\n * Known error codes for an `InitializeError`;\n */\nvar InitializeError;\n(function (InitializeError) {\n    /**\n     * If the protocol version provided by the client can't be handled by the server.\n     * @deprecated This initialize error got replaced by client capabilities. There is\n     * no version handshake in version 3.0x\n     */\n    InitializeError.unknownProtocolVersion = 1;\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\n/**\n * The initialized notification is sent from the client to the\n * server after the client is fully initialized and the server\n * is allowed to send requests from the server to the client.\n */\nvar InitializedNotification;\n(function (InitializedNotification) {\n    InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\n//---- Shutdown Method ----\n/**\n * A shutdown request is sent from the client to the server.\n * It is sent once when the client decides to shutdown the\n * server. The only notification that is sent after a shutdown request\n * is the exit event.\n */\nvar ShutdownRequest;\n(function (ShutdownRequest) {\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\n//---- Exit Notification ----\n/**\n * The exit event is sent from the client to the server to\n * ask the server to exit its process.\n */\nvar ExitNotification;\n(function (ExitNotification) {\n    ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\n/**\n * The configuration change notification is sent from the client to the server\n * when the client's configuration has changed. The notification contains\n * the changed configuration as defined by the language client.\n */\nvar DidChangeConfigurationNotification;\n(function (DidChangeConfigurationNotification) {\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\n//---- Message show and log notifications ----\n/**\n * The message type\n */\nvar MessageType;\n(function (MessageType) {\n    /**\n     * An error message.\n     */\n    MessageType.Error = 1;\n    /**\n     * A warning message.\n     */\n    MessageType.Warning = 2;\n    /**\n     * An information message.\n     */\n    MessageType.Info = 3;\n    /**\n     * A log message.\n     */\n    MessageType.Log = 4;\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\n/**\n * The show message notification is sent from a server to a client to ask\n * the client to display a particular message in the user interface.\n */\nvar ShowMessageNotification;\n(function (ShowMessageNotification) {\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\n/**\n * The show message request is sent from the server to the client to show a message\n * and a set of options actions to the user.\n */\nvar ShowMessageRequest;\n(function (ShowMessageRequest) {\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\n/**\n * The log message notification is sent from the server to the client to ask\n * the client to log a particular message.\n */\nvar LogMessageNotification;\n(function (LogMessageNotification) {\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\n//---- Telemetry notification\n/**\n * The telemetry event notification is sent from the server to the client to ask\n * the client to log telemetry data.\n */\nvar TelemetryEventNotification;\n(function (TelemetryEventNotification) {\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\n/**\n * Defines how the host (editor) should sync\n * document changes to the language server.\n */\nvar TextDocumentSyncKind;\n(function (TextDocumentSyncKind) {\n    /**\n     * Documents should not be synced at all.\n     */\n    TextDocumentSyncKind.None = 0;\n    /**\n     * Documents are synced by always sending the full content\n     * of the document.\n     */\n    TextDocumentSyncKind.Full = 1;\n    /**\n     * Documents are synced by sending the full content on open.\n     * After that only incremental updates to the document are\n     * send.\n     */\n    TextDocumentSyncKind.Incremental = 2;\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\n/**\n * The document open notification is sent from the client to the server to signal\n * newly opened text documents. The document's truth is now managed by the client\n * and the server must not try to read the document's truth using the document's\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\n * mean that its content is presented in an editor. An open notification must not\n * be sent more than once without a corresponding close notification send before.\n * This means open and close notification must be balanced and the max open count\n * is one.\n */\nvar DidOpenTextDocumentNotification;\n(function (DidOpenTextDocumentNotification) {\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\nvar TextDocumentContentChangeEvent;\n(function (TextDocumentContentChangeEvent) {\n    /**\n     * Checks whether the information describes a delta event.\n     */\n    function isIncremental(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    TextDocumentContentChangeEvent.isIncremental = isIncremental;\n    /**\n     * Checks whether the information describes a full replacement event.\n     */\n    function isFull(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n    TextDocumentContentChangeEvent.isFull = isFull;\n})(TextDocumentContentChangeEvent = exports.TextDocumentContentChangeEvent || (exports.TextDocumentContentChangeEvent = {}));\n/**\n * The document change notification is sent from the client to the server to signal\n * changes to a text document.\n */\nvar DidChangeTextDocumentNotification;\n(function (DidChangeTextDocumentNotification) {\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\n/**\n * The document close notification is sent from the client to the server when\n * the document got closed in the client. The document's truth now exists where\n * the document's uri points to (e.g. if the document's uri is a file uri the\n * truth now exists on disk). As with the open notification the close notification\n * is about managing the document's content. Receiving a close notification\n * doesn't mean that the document was open in an editor before. A close\n * notification requires a previous open notification to be sent.\n */\nvar DidCloseTextDocumentNotification;\n(function (DidCloseTextDocumentNotification) {\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\n/**\n * The document save notification is sent from the client to the server when\n * the document got saved in the client.\n */\nvar DidSaveTextDocumentNotification;\n(function (DidSaveTextDocumentNotification) {\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nvar TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\n/**\n * A document will save notification is sent from the client to the server before\n * the document is actually saved.\n */\nvar WillSaveTextDocumentNotification;\n(function (WillSaveTextDocumentNotification) {\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\n/**\n * A document will save request is sent from the client to the server before\n * the document is actually saved. The request can return an array of TextEdits\n * which will be applied to the text document before it is saved. Please note that\n * clients might drop results if computing the text edits took too long or if a\n * server constantly fails on this request. This is done to keep the save fast and\n * reliable.\n */\nvar WillSaveTextDocumentWaitUntilRequest;\n(function (WillSaveTextDocumentWaitUntilRequest) {\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\n/**\n * The watched files notification is sent from the client to the server when\n * the client detects changes to file watched by the language client.\n */\nvar DidChangeWatchedFilesNotification;\n(function (DidChangeWatchedFilesNotification) {\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\n/**\n * The file event type\n */\nvar FileChangeType;\n(function (FileChangeType) {\n    /**\n     * The file got created.\n     */\n    FileChangeType.Created = 1;\n    /**\n     * The file got changed.\n     */\n    FileChangeType.Changed = 2;\n    /**\n     * The file got deleted.\n     */\n    FileChangeType.Deleted = 3;\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\nvar WatchKind;\n(function (WatchKind) {\n    /**\n     * Interested in create events.\n     */\n    WatchKind.Create = 1;\n    /**\n     * Interested in change events\n     */\n    WatchKind.Change = 2;\n    /**\n     * Interested in delete events\n     */\n    WatchKind.Delete = 4;\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\n/**\n * Diagnostics notification are sent from the server to the client to signal\n * results of validation runs.\n */\nvar PublishDiagnosticsNotification;\n(function (PublishDiagnosticsNotification) {\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\n/**\n * How a completion was triggered\n */\nvar CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    /**\n     * Completion was triggered by typing an identifier (24x7 code\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\n     */\n    CompletionTriggerKind.Invoked = 1;\n    /**\n     * Completion was triggered by a trigger character specified by\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\n     */\n    CompletionTriggerKind.TriggerCharacter = 2;\n    /**\n     * Completion was re-triggered as current completion list is incomplete\n     */\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\n/**\n * Request to request completion at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\n * or a Thenable that resolves to such.\n *\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\n */\nvar CompletionRequest;\n(function (CompletionRequest) {\n    CompletionRequest.method = 'textDocument/completion';\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\n/**\n * Request to resolve additional information for a given completion item.The request's\n * parameter is of type [CompletionItem](#CompletionItem) the response\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\n */\nvar CompletionResolveRequest;\n(function (CompletionResolveRequest) {\n    CompletionResolveRequest.method = 'completionItem/resolve';\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\n/**\n * Request to request hover information at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\n * type [Hover](#Hover) or a Thenable that resolves to such.\n */\nvar HoverRequest;\n(function (HoverRequest) {\n    HoverRequest.method = 'textDocument/hover';\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\n/**\n * How a signature help was triggered.\n *\n * @since 3.15.0\n */\nvar SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    /**\n     * Signature help was invoked manually by the user or by a command.\n     */\n    SignatureHelpTriggerKind.Invoked = 1;\n    /**\n     * Signature help was triggered by a trigger character.\n     */\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\n    /**\n     * Signature help was triggered by the cursor moving or by the document content changing.\n     */\n    SignatureHelpTriggerKind.ContentChange = 3;\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\nvar SignatureHelpRequest;\n(function (SignatureHelpRequest) {\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\n/**\n * A request to resolve the definition location of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\n * to such.\n */\nvar DefinitionRequest;\n(function (DefinitionRequest) {\n    DefinitionRequest.method = 'textDocument/definition';\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\n/**\n * A request to resolve project-wide references for the symbol denoted\n * by the given text document position. The request's parameter is of\n * type [ReferenceParams](#ReferenceParams) the response is of type\n * [Location[]](#Location) or a Thenable that resolves to such.\n */\nvar ReferencesRequest;\n(function (ReferencesRequest) {\n    ReferencesRequest.method = 'textDocument/references';\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\n/**\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\n * text document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\n * (#DocumentHighlight) or a Thenable that resolves to such.\n */\nvar DocumentHighlightRequest;\n(function (DocumentHighlightRequest) {\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\n/**\n * A request to list all symbols found in a given text document. The request's\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\n * that resolves to such.\n */\nvar DocumentSymbolRequest;\n(function (DocumentSymbolRequest) {\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\n/**\n * A request to provide commands for the given text document and range.\n */\nvar CodeActionRequest;\n(function (CodeActionRequest) {\n    CodeActionRequest.method = 'textDocument/codeAction';\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\n/**\n * Request to resolve additional information for a given code action.The request's\n * parameter is of type [CodeAction](#CodeAction) the response\n * is of type [CodeAction](#CodeAction) or a Thenable that resolves to such.\n */\nvar CodeActionResolveRequest;\n(function (CodeActionResolveRequest) {\n    CodeActionResolveRequest.method = 'codeAction/resolve';\n    CodeActionResolveRequest.type = new messages_1.ProtocolRequestType(CodeActionResolveRequest.method);\n})(CodeActionResolveRequest = exports.CodeActionResolveRequest || (exports.CodeActionResolveRequest = {}));\n/**\n * A request to list project-wide symbols matching the query string given\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\n * resolves to such.\n */\nvar WorkspaceSymbolRequest;\n(function (WorkspaceSymbolRequest) {\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\n/**\n * A request to provide code lens for the given text document.\n */\nvar CodeLensRequest;\n(function (CodeLensRequest) {\n    CodeLensRequest.method = 'textDocument/codeLens';\n    CodeLensRequest.type = new messages_1.ProtocolRequestType(CodeLensRequest.method);\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\n/**\n * A request to resolve a command for a given code lens.\n */\nvar CodeLensResolveRequest;\n(function (CodeLensResolveRequest) {\n    CodeLensResolveRequest.method = 'codeLens/resolve';\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType(CodeLensResolveRequest.method);\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\n/**\n * A request to refresh all code actions\n *\n * @since 3.16.0\n */\nvar CodeLensRefreshRequest;\n(function (CodeLensRefreshRequest) {\n    CodeLensRefreshRequest.method = `workspace/codeLens/refresh`;\n    CodeLensRefreshRequest.type = new messages_1.ProtocolRequestType0(CodeLensRefreshRequest.method);\n})(CodeLensRefreshRequest = exports.CodeLensRefreshRequest || (exports.CodeLensRefreshRequest = {}));\n/**\n * A request to provide document links\n */\nvar DocumentLinkRequest;\n(function (DocumentLinkRequest) {\n    DocumentLinkRequest.method = 'textDocument/documentLink';\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\n/**\n * Request to resolve additional information for a given document link. The request's\n * parameter is of type [DocumentLink](#DocumentLink) the response\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\n */\nvar DocumentLinkResolveRequest;\n(function (DocumentLinkResolveRequest) {\n    DocumentLinkResolveRequest.method = 'documentLink/resolve';\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType(DocumentLinkResolveRequest.method);\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\n/**\n * A request to to format a whole document.\n */\nvar DocumentFormattingRequest;\n(function (DocumentFormattingRequest) {\n    DocumentFormattingRequest.method = 'textDocument/formatting';\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\n/**\n * A request to to format a range in a document.\n */\nvar DocumentRangeFormattingRequest;\n(function (DocumentRangeFormattingRequest) {\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\n/**\n * A request to format a document on type.\n */\nvar DocumentOnTypeFormattingRequest;\n(function (DocumentOnTypeFormattingRequest) {\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\n//---- Rename ----------------------------------------------\nvar PrepareSupportDefaultBehavior;\n(function (PrepareSupportDefaultBehavior) {\n    /**\n     * The client's default behavior is to select the identifier\n     * according the to language's syntax rule.\n     */\n    PrepareSupportDefaultBehavior.Identifier = 1;\n})(PrepareSupportDefaultBehavior = exports.PrepareSupportDefaultBehavior || (exports.PrepareSupportDefaultBehavior = {}));\n/**\n * A request to rename a symbol.\n */\nvar RenameRequest;\n(function (RenameRequest) {\n    RenameRequest.method = 'textDocument/rename';\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\n/**\n * A request to test and perform the setup necessary for a rename.\n *\n * @since 3.16 - support for default behavior\n */\nvar PrepareRenameRequest;\n(function (PrepareRenameRequest) {\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\n/**\n * A request send from the client to the server to execute a command. The request might return\n * a workspace edit which the client will apply to the workspace.\n */\nvar ExecuteCommandRequest;\n(function (ExecuteCommandRequest) {\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\n/**\n * A request sent from the server to the client to modified certain resources.\n */\nvar ApplyWorkspaceEditRequest;\n(function (ApplyWorkspaceEditRequest) {\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\n//# sourceMappingURL=protocol.js.map",
      "start": 1706896525004,
      "end": 1706896525059,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1706896525059,
      "end": 1706896525059,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as protocol } from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.js?commonjs-exports\";\nimport require$$0 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/utils/is.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/messages.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.implementation.js?commonjs-proxy\";\nimport require$$3 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.typeDefinition.js?commonjs-proxy\";\nimport require$$4 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolders.js?commonjs-proxy\";\nimport require$$5 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.configuration.js?commonjs-proxy\";\nimport require$$6 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.colorProvider.js?commonjs-proxy\";\nimport require$$7 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.foldingRange.js?commonjs-proxy\";\nimport require$$8 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.declaration.js?commonjs-proxy\";\nimport require$$9 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.selectionRange.js?commonjs-proxy\";\nimport require$$10 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.progress.js?commonjs-proxy\";\nimport require$$11 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.callHierarchy.js?commonjs-proxy\";\nimport require$$12 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.semanticTokens.js?commonjs-proxy\";\nimport require$$13 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.showDocument.js?commonjs-proxy\";\nimport require$$14 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.linkedEditingRange.js?commonjs-proxy\";\nimport require$$15 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.fileOperations.js?commonjs-proxy\";\nimport require$$16 from \"\\u0000D:/Programming/templates/KPIcopy/node_modules/vscode-languageserver-protocol/lib/common/protocol.moniker.js?commonjs-proxy\";\n\n(function (exports) {\n\t\"use strict\";\n\t/* --------------------------------------------------------------------------------------------\n\t * Copyright (c) Microsoft Corporation. All rights reserved.\n\t * Licensed under the MIT License. See License.txt in the project root for license information.\n\t * ------------------------------------------------------------------------------------------ */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeError = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.DocumentFilter = void 0;\n\texports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.SemanticTokens = exports.SemanticTokenModifiers = exports.SemanticTokenTypes = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = void 0;\n\tconst Is = require$$0;\n\tconst messages_1 = require$$1;\n\tconst protocol_implementation_1 = require$$2;\n\tObject.defineProperty(exports, \"ImplementationRequest\", { enumerable: true, get: function () { return protocol_implementation_1.ImplementationRequest; } });\n\tconst protocol_typeDefinition_1 = require$$3;\n\tObject.defineProperty(exports, \"TypeDefinitionRequest\", { enumerable: true, get: function () { return protocol_typeDefinition_1.TypeDefinitionRequest; } });\n\tconst protocol_workspaceFolders_1 = require$$4;\n\tObject.defineProperty(exports, \"WorkspaceFoldersRequest\", { enumerable: true, get: function () { return protocol_workspaceFolders_1.WorkspaceFoldersRequest; } });\n\tObject.defineProperty(exports, \"DidChangeWorkspaceFoldersNotification\", { enumerable: true, get: function () { return protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification; } });\n\tconst protocol_configuration_1 = require$$5;\n\tObject.defineProperty(exports, \"ConfigurationRequest\", { enumerable: true, get: function () { return protocol_configuration_1.ConfigurationRequest; } });\n\tconst protocol_colorProvider_1 = require$$6;\n\tObject.defineProperty(exports, \"DocumentColorRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.DocumentColorRequest; } });\n\tObject.defineProperty(exports, \"ColorPresentationRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.ColorPresentationRequest; } });\n\tconst protocol_foldingRange_1 = require$$7;\n\tObject.defineProperty(exports, \"FoldingRangeRequest\", { enumerable: true, get: function () { return protocol_foldingRange_1.FoldingRangeRequest; } });\n\tconst protocol_declaration_1 = require$$8;\n\tObject.defineProperty(exports, \"DeclarationRequest\", { enumerable: true, get: function () { return protocol_declaration_1.DeclarationRequest; } });\n\tconst protocol_selectionRange_1 = require$$9;\n\tObject.defineProperty(exports, \"SelectionRangeRequest\", { enumerable: true, get: function () { return protocol_selectionRange_1.SelectionRangeRequest; } });\n\tconst protocol_progress_1 = require$$10;\n\tObject.defineProperty(exports, \"WorkDoneProgress\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgress; } });\n\tObject.defineProperty(exports, \"WorkDoneProgressCreateRequest\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCreateRequest; } });\n\tObject.defineProperty(exports, \"WorkDoneProgressCancelNotification\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCancelNotification; } });\n\tconst protocol_callHierarchy_1 = require$$11;\n\tObject.defineProperty(exports, \"CallHierarchyIncomingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyIncomingCallsRequest; } });\n\tObject.defineProperty(exports, \"CallHierarchyOutgoingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyOutgoingCallsRequest; } });\n\tObject.defineProperty(exports, \"CallHierarchyPrepareRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyPrepareRequest; } });\n\tconst protocol_semanticTokens_1 = require$$12;\n\tObject.defineProperty(exports, \"SemanticTokenTypes\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokenTypes; } });\n\tObject.defineProperty(exports, \"SemanticTokenModifiers\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokenModifiers; } });\n\tObject.defineProperty(exports, \"SemanticTokens\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokens; } });\n\tObject.defineProperty(exports, \"TokenFormat\", { enumerable: true, get: function () { return protocol_semanticTokens_1.TokenFormat; } });\n\tObject.defineProperty(exports, \"SemanticTokensRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRequest; } });\n\tObject.defineProperty(exports, \"SemanticTokensDeltaRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensDeltaRequest; } });\n\tObject.defineProperty(exports, \"SemanticTokensRangeRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRangeRequest; } });\n\tObject.defineProperty(exports, \"SemanticTokensRefreshRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRefreshRequest; } });\n\tObject.defineProperty(exports, \"SemanticTokensRegistrationType\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRegistrationType; } });\n\tconst protocol_showDocument_1 = require$$13;\n\tObject.defineProperty(exports, \"ShowDocumentRequest\", { enumerable: true, get: function () { return protocol_showDocument_1.ShowDocumentRequest; } });\n\tconst protocol_linkedEditingRange_1 = require$$14;\n\tObject.defineProperty(exports, \"LinkedEditingRangeRequest\", { enumerable: true, get: function () { return protocol_linkedEditingRange_1.LinkedEditingRangeRequest; } });\n\tconst protocol_fileOperations_1 = require$$15;\n\tObject.defineProperty(exports, \"FileOperationPatternKind\", { enumerable: true, get: function () { return protocol_fileOperations_1.FileOperationPatternKind; } });\n\tObject.defineProperty(exports, \"DidCreateFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidCreateFilesNotification; } });\n\tObject.defineProperty(exports, \"WillCreateFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillCreateFilesRequest; } });\n\tObject.defineProperty(exports, \"DidRenameFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidRenameFilesNotification; } });\n\tObject.defineProperty(exports, \"WillRenameFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillRenameFilesRequest; } });\n\tObject.defineProperty(exports, \"DidDeleteFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidDeleteFilesNotification; } });\n\tObject.defineProperty(exports, \"WillDeleteFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillDeleteFilesRequest; } });\n\tconst protocol_moniker_1 = require$$16;\n\tObject.defineProperty(exports, \"UniquenessLevel\", { enumerable: true, get: function () { return protocol_moniker_1.UniquenessLevel; } });\n\tObject.defineProperty(exports, \"MonikerKind\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerKind; } });\n\tObject.defineProperty(exports, \"MonikerRequest\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerRequest; } });\n\t// @ts-ignore: to avoid inlining LocationLink as dynamic import\n\tlet __noDynamicImport;\n\t/**\n\t * The DocumentFilter namespace provides helper functions to work with\n\t * [DocumentFilter](#DocumentFilter) literals.\n\t */\n\tvar DocumentFilter;\n\t(function (DocumentFilter) {\n\t    function is(value) {\n\t        const candidate = value;\n\t        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\n\t    }\n\t    DocumentFilter.is = is;\n\t})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\n\t/**\n\t * The DocumentSelector namespace provides helper functions to work with\n\t * [DocumentSelector](#DocumentSelector)s.\n\t */\n\tvar DocumentSelector;\n\t(function (DocumentSelector) {\n\t    function is(value) {\n\t        if (!Array.isArray(value)) {\n\t            return false;\n\t        }\n\t        for (let elem of value) {\n\t            if (!Is.string(elem) && !DocumentFilter.is(elem)) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    }\n\t    DocumentSelector.is = is;\n\t})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\n\t/**\n\t * The `client/registerCapability` request is sent from the server to the client to register a new capability\n\t * handler on the client side.\n\t */\n\tvar RegistrationRequest;\n\t(function (RegistrationRequest) {\n\t    RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\n\t})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\n\t/**\n\t * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\n\t * handler on the client side.\n\t */\n\tvar UnregistrationRequest;\n\t(function (UnregistrationRequest) {\n\t    UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\n\t})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\n\tvar ResourceOperationKind;\n\t(function (ResourceOperationKind) {\n\t    /**\n\t     * Supports creating new files and folders.\n\t     */\n\t    ResourceOperationKind.Create = 'create';\n\t    /**\n\t     * Supports renaming existing files and folders.\n\t     */\n\t    ResourceOperationKind.Rename = 'rename';\n\t    /**\n\t     * Supports deleting existing files and folders.\n\t     */\n\t    ResourceOperationKind.Delete = 'delete';\n\t})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\n\tvar FailureHandlingKind;\n\t(function (FailureHandlingKind) {\n\t    /**\n\t     * Applying the workspace change is simply aborted if one of the changes provided\n\t     * fails. All operations executed before the failing operation stay executed.\n\t     */\n\t    FailureHandlingKind.Abort = 'abort';\n\t    /**\n\t     * All operations are executed transactional. That means they either all\n\t     * succeed or no changes at all are applied to the workspace.\n\t     */\n\t    FailureHandlingKind.Transactional = 'transactional';\n\t    /**\n\t     * If the workspace edit contains only textual file changes they are executed transactional.\n\t     * If resource changes (create, rename or delete file) are part of the change the failure\n\t     * handling strategy is abort.\n\t     */\n\t    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\n\t    /**\n\t     * The client tries to undo the operations already executed. But there is no\n\t     * guarantee that this is succeeding.\n\t     */\n\t    FailureHandlingKind.Undo = 'undo';\n\t})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\n\t/**\n\t * The StaticRegistrationOptions namespace provides helper functions to work with\n\t * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\n\t */\n\tvar StaticRegistrationOptions;\n\t(function (StaticRegistrationOptions) {\n\t    function hasId(value) {\n\t        const candidate = value;\n\t        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\n\t    }\n\t    StaticRegistrationOptions.hasId = hasId;\n\t})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\n\t/**\n\t * The TextDocumentRegistrationOptions namespace provides helper functions to work with\n\t * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\n\t */\n\tvar TextDocumentRegistrationOptions;\n\t(function (TextDocumentRegistrationOptions) {\n\t    function is(value) {\n\t        const candidate = value;\n\t        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\n\t    }\n\t    TextDocumentRegistrationOptions.is = is;\n\t})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\n\t/**\n\t * The WorkDoneProgressOptions namespace provides helper functions to work with\n\t * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\n\t */\n\tvar WorkDoneProgressOptions;\n\t(function (WorkDoneProgressOptions) {\n\t    function is(value) {\n\t        const candidate = value;\n\t        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\n\t    }\n\t    WorkDoneProgressOptions.is = is;\n\t    function hasWorkDoneProgress(value) {\n\t        const candidate = value;\n\t        return candidate && Is.boolean(candidate.workDoneProgress);\n\t    }\n\t    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\n\t})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\n\t/**\n\t * The initialize request is sent from the client to the server.\n\t * It is sent once as the request after starting up the server.\n\t * The requests parameter is of type [InitializeParams](#InitializeParams)\n\t * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\n\t * resolves to such.\n\t */\n\tvar InitializeRequest;\n\t(function (InitializeRequest) {\n\t    InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\n\t})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\n\t/**\n\t * Known error codes for an `InitializeError`;\n\t */\n\tvar InitializeError;\n\t(function (InitializeError) {\n\t    /**\n\t     * If the protocol version provided by the client can't be handled by the server.\n\t     * @deprecated This initialize error got replaced by client capabilities. There is\n\t     * no version handshake in version 3.0x\n\t     */\n\t    InitializeError.unknownProtocolVersion = 1;\n\t})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\n\t/**\n\t * The initialized notification is sent from the client to the\n\t * server after the client is fully initialized and the server\n\t * is allowed to send requests from the server to the client.\n\t */\n\tvar InitializedNotification;\n\t(function (InitializedNotification) {\n\t    InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\n\t})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\n\t//---- Shutdown Method ----\n\t/**\n\t * A shutdown request is sent from the client to the server.\n\t * It is sent once when the client decides to shutdown the\n\t * server. The only notification that is sent after a shutdown request\n\t * is the exit event.\n\t */\n\tvar ShutdownRequest;\n\t(function (ShutdownRequest) {\n\t    ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\n\t})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\n\t//---- Exit Notification ----\n\t/**\n\t * The exit event is sent from the client to the server to\n\t * ask the server to exit its process.\n\t */\n\tvar ExitNotification;\n\t(function (ExitNotification) {\n\t    ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\n\t})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\n\t/**\n\t * The configuration change notification is sent from the client to the server\n\t * when the client's configuration has changed. The notification contains\n\t * the changed configuration as defined by the language client.\n\t */\n\tvar DidChangeConfigurationNotification;\n\t(function (DidChangeConfigurationNotification) {\n\t    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\n\t})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\n\t//---- Message show and log notifications ----\n\t/**\n\t * The message type\n\t */\n\tvar MessageType;\n\t(function (MessageType) {\n\t    /**\n\t     * An error message.\n\t     */\n\t    MessageType.Error = 1;\n\t    /**\n\t     * A warning message.\n\t     */\n\t    MessageType.Warning = 2;\n\t    /**\n\t     * An information message.\n\t     */\n\t    MessageType.Info = 3;\n\t    /**\n\t     * A log message.\n\t     */\n\t    MessageType.Log = 4;\n\t})(MessageType = exports.MessageType || (exports.MessageType = {}));\n\t/**\n\t * The show message notification is sent from a server to a client to ask\n\t * the client to display a particular message in the user interface.\n\t */\n\tvar ShowMessageNotification;\n\t(function (ShowMessageNotification) {\n\t    ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\n\t})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\n\t/**\n\t * The show message request is sent from the server to the client to show a message\n\t * and a set of options actions to the user.\n\t */\n\tvar ShowMessageRequest;\n\t(function (ShowMessageRequest) {\n\t    ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\n\t})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\n\t/**\n\t * The log message notification is sent from the server to the client to ask\n\t * the client to log a particular message.\n\t */\n\tvar LogMessageNotification;\n\t(function (LogMessageNotification) {\n\t    LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\n\t})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\n\t//---- Telemetry notification\n\t/**\n\t * The telemetry event notification is sent from the server to the client to ask\n\t * the client to log telemetry data.\n\t */\n\tvar TelemetryEventNotification;\n\t(function (TelemetryEventNotification) {\n\t    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\n\t})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\n\t/**\n\t * Defines how the host (editor) should sync\n\t * document changes to the language server.\n\t */\n\tvar TextDocumentSyncKind;\n\t(function (TextDocumentSyncKind) {\n\t    /**\n\t     * Documents should not be synced at all.\n\t     */\n\t    TextDocumentSyncKind.None = 0;\n\t    /**\n\t     * Documents are synced by always sending the full content\n\t     * of the document.\n\t     */\n\t    TextDocumentSyncKind.Full = 1;\n\t    /**\n\t     * Documents are synced by sending the full content on open.\n\t     * After that only incremental updates to the document are\n\t     * send.\n\t     */\n\t    TextDocumentSyncKind.Incremental = 2;\n\t})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\n\t/**\n\t * The document open notification is sent from the client to the server to signal\n\t * newly opened text documents. The document's truth is now managed by the client\n\t * and the server must not try to read the document's truth using the document's\n\t * uri. Open in this sense means it is managed by the client. It doesn't necessarily\n\t * mean that its content is presented in an editor. An open notification must not\n\t * be sent more than once without a corresponding close notification send before.\n\t * This means open and close notification must be balanced and the max open count\n\t * is one.\n\t */\n\tvar DidOpenTextDocumentNotification;\n\t(function (DidOpenTextDocumentNotification) {\n\t    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\n\t    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\n\t})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\n\tvar TextDocumentContentChangeEvent;\n\t(function (TextDocumentContentChangeEvent) {\n\t    /**\n\t     * Checks whether the information describes a delta event.\n\t     */\n\t    function isIncremental(event) {\n\t        let candidate = event;\n\t        return candidate !== undefined && candidate !== null &&\n\t            typeof candidate.text === 'string' && candidate.range !== undefined &&\n\t            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n\t    }\n\t    TextDocumentContentChangeEvent.isIncremental = isIncremental;\n\t    /**\n\t     * Checks whether the information describes a full replacement event.\n\t     */\n\t    function isFull(event) {\n\t        let candidate = event;\n\t        return candidate !== undefined && candidate !== null &&\n\t            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n\t    }\n\t    TextDocumentContentChangeEvent.isFull = isFull;\n\t})(TextDocumentContentChangeEvent = exports.TextDocumentContentChangeEvent || (exports.TextDocumentContentChangeEvent = {}));\n\t/**\n\t * The document change notification is sent from the client to the server to signal\n\t * changes to a text document.\n\t */\n\tvar DidChangeTextDocumentNotification;\n\t(function (DidChangeTextDocumentNotification) {\n\t    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\n\t    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\n\t})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\n\t/**\n\t * The document close notification is sent from the client to the server when\n\t * the document got closed in the client. The document's truth now exists where\n\t * the document's uri points to (e.g. if the document's uri is a file uri the\n\t * truth now exists on disk). As with the open notification the close notification\n\t * is about managing the document's content. Receiving a close notification\n\t * doesn't mean that the document was open in an editor before. A close\n\t * notification requires a previous open notification to be sent.\n\t */\n\tvar DidCloseTextDocumentNotification;\n\t(function (DidCloseTextDocumentNotification) {\n\t    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\n\t    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\n\t})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\n\t/**\n\t * The document save notification is sent from the client to the server when\n\t * the document got saved in the client.\n\t */\n\tvar DidSaveTextDocumentNotification;\n\t(function (DidSaveTextDocumentNotification) {\n\t    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\n\t    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\n\t})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\n\t/**\n\t * Represents reasons why a text document is saved.\n\t */\n\tvar TextDocumentSaveReason;\n\t(function (TextDocumentSaveReason) {\n\t    /**\n\t     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n\t     * or by an API call.\n\t     */\n\t    TextDocumentSaveReason.Manual = 1;\n\t    /**\n\t     * Automatic after a delay.\n\t     */\n\t    TextDocumentSaveReason.AfterDelay = 2;\n\t    /**\n\t     * When the editor lost focus.\n\t     */\n\t    TextDocumentSaveReason.FocusOut = 3;\n\t})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\n\t/**\n\t * A document will save notification is sent from the client to the server before\n\t * the document is actually saved.\n\t */\n\tvar WillSaveTextDocumentNotification;\n\t(function (WillSaveTextDocumentNotification) {\n\t    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\n\t    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\n\t})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\n\t/**\n\t * A document will save request is sent from the client to the server before\n\t * the document is actually saved. The request can return an array of TextEdits\n\t * which will be applied to the text document before it is saved. Please note that\n\t * clients might drop results if computing the text edits took too long or if a\n\t * server constantly fails on this request. This is done to keep the save fast and\n\t * reliable.\n\t */\n\tvar WillSaveTextDocumentWaitUntilRequest;\n\t(function (WillSaveTextDocumentWaitUntilRequest) {\n\t    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\n\t    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\n\t})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\n\t/**\n\t * The watched files notification is sent from the client to the server when\n\t * the client detects changes to file watched by the language client.\n\t */\n\tvar DidChangeWatchedFilesNotification;\n\t(function (DidChangeWatchedFilesNotification) {\n\t    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\n\t})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\n\t/**\n\t * The file event type\n\t */\n\tvar FileChangeType;\n\t(function (FileChangeType) {\n\t    /**\n\t     * The file got created.\n\t     */\n\t    FileChangeType.Created = 1;\n\t    /**\n\t     * The file got changed.\n\t     */\n\t    FileChangeType.Changed = 2;\n\t    /**\n\t     * The file got deleted.\n\t     */\n\t    FileChangeType.Deleted = 3;\n\t})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\n\tvar WatchKind;\n\t(function (WatchKind) {\n\t    /**\n\t     * Interested in create events.\n\t     */\n\t    WatchKind.Create = 1;\n\t    /**\n\t     * Interested in change events\n\t     */\n\t    WatchKind.Change = 2;\n\t    /**\n\t     * Interested in delete events\n\t     */\n\t    WatchKind.Delete = 4;\n\t})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\n\t/**\n\t * Diagnostics notification are sent from the server to the client to signal\n\t * results of validation runs.\n\t */\n\tvar PublishDiagnosticsNotification;\n\t(function (PublishDiagnosticsNotification) {\n\t    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\n\t})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\n\t/**\n\t * How a completion was triggered\n\t */\n\tvar CompletionTriggerKind;\n\t(function (CompletionTriggerKind) {\n\t    /**\n\t     * Completion was triggered by typing an identifier (24x7 code\n\t     * complete), manual invocation (e.g Ctrl+Space) or via API.\n\t     */\n\t    CompletionTriggerKind.Invoked = 1;\n\t    /**\n\t     * Completion was triggered by a trigger character specified by\n\t     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\n\t     */\n\t    CompletionTriggerKind.TriggerCharacter = 2;\n\t    /**\n\t     * Completion was re-triggered as current completion list is incomplete\n\t     */\n\t    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\n\t})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\n\t/**\n\t * Request to request completion at a given text document position. The request's\n\t * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\n\t * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\n\t * or a Thenable that resolves to such.\n\t *\n\t * The request can delay the computation of the [`detail`](#CompletionItem.detail)\n\t * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\n\t * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\n\t * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\n\t */\n\tvar CompletionRequest;\n\t(function (CompletionRequest) {\n\t    CompletionRequest.method = 'textDocument/completion';\n\t    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\n\t})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\n\t/**\n\t * Request to resolve additional information for a given completion item.The request's\n\t * parameter is of type [CompletionItem](#CompletionItem) the response\n\t * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\n\t */\n\tvar CompletionResolveRequest;\n\t(function (CompletionResolveRequest) {\n\t    CompletionResolveRequest.method = 'completionItem/resolve';\n\t    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\n\t})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\n\t/**\n\t * Request to request hover information at a given text document position. The request's\n\t * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\n\t * type [Hover](#Hover) or a Thenable that resolves to such.\n\t */\n\tvar HoverRequest;\n\t(function (HoverRequest) {\n\t    HoverRequest.method = 'textDocument/hover';\n\t    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\n\t})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\n\t/**\n\t * How a signature help was triggered.\n\t *\n\t * @since 3.15.0\n\t */\n\tvar SignatureHelpTriggerKind;\n\t(function (SignatureHelpTriggerKind) {\n\t    /**\n\t     * Signature help was invoked manually by the user or by a command.\n\t     */\n\t    SignatureHelpTriggerKind.Invoked = 1;\n\t    /**\n\t     * Signature help was triggered by a trigger character.\n\t     */\n\t    SignatureHelpTriggerKind.TriggerCharacter = 2;\n\t    /**\n\t     * Signature help was triggered by the cursor moving or by the document content changing.\n\t     */\n\t    SignatureHelpTriggerKind.ContentChange = 3;\n\t})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\n\tvar SignatureHelpRequest;\n\t(function (SignatureHelpRequest) {\n\t    SignatureHelpRequest.method = 'textDocument/signatureHelp';\n\t    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\n\t})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\n\t/**\n\t * A request to resolve the definition location of a symbol at a given text\n\t * document position. The request's parameter is of type [TextDocumentPosition]\n\t * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\n\t * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\n\t * to such.\n\t */\n\tvar DefinitionRequest;\n\t(function (DefinitionRequest) {\n\t    DefinitionRequest.method = 'textDocument/definition';\n\t    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\n\t})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\n\t/**\n\t * A request to resolve project-wide references for the symbol denoted\n\t * by the given text document position. The request's parameter is of\n\t * type [ReferenceParams](#ReferenceParams) the response is of type\n\t * [Location[]](#Location) or a Thenable that resolves to such.\n\t */\n\tvar ReferencesRequest;\n\t(function (ReferencesRequest) {\n\t    ReferencesRequest.method = 'textDocument/references';\n\t    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\n\t})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\n\t/**\n\t * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\n\t * text document position. The request's parameter is of type [TextDocumentPosition]\n\t * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\n\t * (#DocumentHighlight) or a Thenable that resolves to such.\n\t */\n\tvar DocumentHighlightRequest;\n\t(function (DocumentHighlightRequest) {\n\t    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\n\t    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\n\t})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\n\t/**\n\t * A request to list all symbols found in a given text document. The request's\n\t * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\n\t * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\n\t * that resolves to such.\n\t */\n\tvar DocumentSymbolRequest;\n\t(function (DocumentSymbolRequest) {\n\t    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\n\t    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\n\t})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\n\t/**\n\t * A request to provide commands for the given text document and range.\n\t */\n\tvar CodeActionRequest;\n\t(function (CodeActionRequest) {\n\t    CodeActionRequest.method = 'textDocument/codeAction';\n\t    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\n\t})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\n\t/**\n\t * Request to resolve additional information for a given code action.The request's\n\t * parameter is of type [CodeAction](#CodeAction) the response\n\t * is of type [CodeAction](#CodeAction) or a Thenable that resolves to such.\n\t */\n\tvar CodeActionResolveRequest;\n\t(function (CodeActionResolveRequest) {\n\t    CodeActionResolveRequest.method = 'codeAction/resolve';\n\t    CodeActionResolveRequest.type = new messages_1.ProtocolRequestType(CodeActionResolveRequest.method);\n\t})(CodeActionResolveRequest = exports.CodeActionResolveRequest || (exports.CodeActionResolveRequest = {}));\n\t/**\n\t * A request to list project-wide symbols matching the query string given\n\t * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\n\t * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\n\t * resolves to such.\n\t */\n\tvar WorkspaceSymbolRequest;\n\t(function (WorkspaceSymbolRequest) {\n\t    WorkspaceSymbolRequest.method = 'workspace/symbol';\n\t    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\n\t})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\n\t/**\n\t * A request to provide code lens for the given text document.\n\t */\n\tvar CodeLensRequest;\n\t(function (CodeLensRequest) {\n\t    CodeLensRequest.method = 'textDocument/codeLens';\n\t    CodeLensRequest.type = new messages_1.ProtocolRequestType(CodeLensRequest.method);\n\t})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\n\t/**\n\t * A request to resolve a command for a given code lens.\n\t */\n\tvar CodeLensResolveRequest;\n\t(function (CodeLensResolveRequest) {\n\t    CodeLensResolveRequest.method = 'codeLens/resolve';\n\t    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType(CodeLensResolveRequest.method);\n\t})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\n\t/**\n\t * A request to refresh all code actions\n\t *\n\t * @since 3.16.0\n\t */\n\tvar CodeLensRefreshRequest;\n\t(function (CodeLensRefreshRequest) {\n\t    CodeLensRefreshRequest.method = `workspace/codeLens/refresh`;\n\t    CodeLensRefreshRequest.type = new messages_1.ProtocolRequestType0(CodeLensRefreshRequest.method);\n\t})(CodeLensRefreshRequest = exports.CodeLensRefreshRequest || (exports.CodeLensRefreshRequest = {}));\n\t/**\n\t * A request to provide document links\n\t */\n\tvar DocumentLinkRequest;\n\t(function (DocumentLinkRequest) {\n\t    DocumentLinkRequest.method = 'textDocument/documentLink';\n\t    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\n\t})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\n\t/**\n\t * Request to resolve additional information for a given document link. The request's\n\t * parameter is of type [DocumentLink](#DocumentLink) the response\n\t * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\n\t */\n\tvar DocumentLinkResolveRequest;\n\t(function (DocumentLinkResolveRequest) {\n\t    DocumentLinkResolveRequest.method = 'documentLink/resolve';\n\t    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType(DocumentLinkResolveRequest.method);\n\t})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\n\t/**\n\t * A request to to format a whole document.\n\t */\n\tvar DocumentFormattingRequest;\n\t(function (DocumentFormattingRequest) {\n\t    DocumentFormattingRequest.method = 'textDocument/formatting';\n\t    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\n\t})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\n\t/**\n\t * A request to to format a range in a document.\n\t */\n\tvar DocumentRangeFormattingRequest;\n\t(function (DocumentRangeFormattingRequest) {\n\t    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\n\t    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\n\t})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\n\t/**\n\t * A request to format a document on type.\n\t */\n\tvar DocumentOnTypeFormattingRequest;\n\t(function (DocumentOnTypeFormattingRequest) {\n\t    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\n\t    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\n\t})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\n\t//---- Rename ----------------------------------------------\n\tvar PrepareSupportDefaultBehavior;\n\t(function (PrepareSupportDefaultBehavior) {\n\t    /**\n\t     * The client's default behavior is to select the identifier\n\t     * according the to language's syntax rule.\n\t     */\n\t    PrepareSupportDefaultBehavior.Identifier = 1;\n\t})(PrepareSupportDefaultBehavior = exports.PrepareSupportDefaultBehavior || (exports.PrepareSupportDefaultBehavior = {}));\n\t/**\n\t * A request to rename a symbol.\n\t */\n\tvar RenameRequest;\n\t(function (RenameRequest) {\n\t    RenameRequest.method = 'textDocument/rename';\n\t    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\n\t})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\n\t/**\n\t * A request to test and perform the setup necessary for a rename.\n\t *\n\t * @since 3.16 - support for default behavior\n\t */\n\tvar PrepareRenameRequest;\n\t(function (PrepareRenameRequest) {\n\t    PrepareRenameRequest.method = 'textDocument/prepareRename';\n\t    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\n\t})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\n\t/**\n\t * A request send from the client to the server to execute a command. The request might return\n\t * a workspace edit which the client will apply to the workspace.\n\t */\n\tvar ExecuteCommandRequest;\n\t(function (ExecuteCommandRequest) {\n\t    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\n\t})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\n\t/**\n\t * A request sent from the server to the client to modified certain resources.\n\t */\n\tvar ApplyWorkspaceEditRequest;\n\t(function (ApplyWorkspaceEditRequest) {\n\t    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\n\t})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\n\t//# sourceMappingURL=protocol.js.map \n} (protocol));\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(protocol);\nexport { protocol as __moduleExports };",
      "start": 1706896525059,
      "end": 1706896525549,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1706896525549,
      "end": 1706896525549,
      "order": "normal"
    }
  ]
}
