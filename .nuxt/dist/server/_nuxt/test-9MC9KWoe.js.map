{"version":3,"file":"test-9MC9KWoe.js","sources":["../../../../stores/test.ts"],"sourcesContent":["import {defineStore} from \"pinia\";\r\nimport {useAuthStore} from \"~/stores/auth\";\r\nimport {toast} from \"vue3-toastify\";\r\nimport axios from \"~/composables/axios\";\r\nimport {Router} from \"vue-router\";\r\nimport nuxtStorage from \"nuxt-storage/nuxt-storage\";\r\nexport const useTestList = defineStore('test-list', {\r\n  state: () => ({\r\n    test: {},\r\n    testIQ: {},\r\n    testSpecial: {},\r\n    currentTest: {},\r\n    exam: {},\r\n  }),\r\n  getters: {\r\n    get_all_exam(exam) {\r\n      return this.exam\r\n    },\r\n    get_test(test) {\r\n      return this.test\r\n    },\r\n    get_current_test(currentTest) {\r\n      return this.currentTest\r\n    },\r\n    get_all_test(test) {\r\n      return this.test\r\n    },\r\n    get_test_iq(testIQ) {\r\n      return this.testIQ\r\n    },\r\n    get_test_special(testSpecial) {\r\n      return this.testSpecial\r\n    }\r\n  },\r\n  actions: {\r\n    async loadAllTest(params: { page: number, limit: number, usual?: number }) {\r\n      axios.get(`api/v1/test/test-list?page=${params.page}&limit=${params.limit}&usual=${params.usual}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(response => {\r\n        if(params.usual !== 0) {\r\n          this.testIQ = response.data\r\n        } else {\r\n          this.testSpecial = response.data\r\n        }\r\n      })\r\n    },\r\n    async loadExam() {\r\n      axios.get(`api/v1/exam/exam-list`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.test = res.data\r\n      })\r\n    },\r\n    async loadCurrentTest() {\r\n      axios.get(`api/v1/exam/current-test`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.currentTest = res.data\r\n      }).catch(e=>{\r\n        useAuthStore().exam_active = false\r\n      })\r\n    },\r\n\r\n    async testStart(params: { usual: any }, router: Router) {\r\n      axios.post(`api/v1/exam/start`, {usual: params.usual}, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.test = res.data\r\n        this.loadCurrentTest()\r\n        useAuthStore().exam_active = true\r\n        useAuthStore().loadCurrentUser()\r\n        router.push('/base/tests/exam')\r\n      })\r\n    },\r\n    async testAnswer(params: { answer: any, test_id: any }, router: Router) {\r\n      axios.post(`api/v1/exam/answer`, {\r\n        test_id: params.test_id,\r\n        answer: params.answer\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.loadCurrentTest()\r\n        useAuthStore().loadCurrentUser()\r\n      }).catch(e => {\r\n        router.push('/base/tests')\r\n      })\r\n    },\r\n    async createTest(params: { test: any, options: any, answer: any }) {\r\n      axios.post(`api/v1/test/create`, {\r\n        answer_text: params.answer,\r\n        options_list: params.options,\r\n        question: params.test.question,\r\n        department_id: params.test.department_id\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        this.test = res.data\r\n        toast.success('Тест успешно создан', {autoClose: 1500, theme: 'auto'})\r\n      })\r\n    },\r\n    async deleteTest(params: { test_id: number }) {\r\n      axios.delete(`api/v1/test/delete/${params.test_id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${nuxtStorage.localStorage.getData('token')}`\r\n        }\r\n      }).then(res => {\r\n        toast.success('Тест успешно удалён', {autoClose: 1500, theme: 'auto'})\r\n        this.test = res.data\r\n        this.loadAllTest({page: 1, limit: 20})\r\n      }).catch(e => {\r\n        toast('Ошибка', {theme: \"auto\", autoClose: 1500})\r\n      })\r\n    }\r\n  }\r\n})\r\n"],"names":[],"mappings":"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"}